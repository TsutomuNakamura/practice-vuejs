= 開始ポイント =
条件付きレンダリングのサンプルを実行する前に、開始ポイントのソースコードを示します。

* index.html
<syntaxhighlight lang="html">
<!DOCTYPE html>
<html>
<head>
<title>Product App</title>
<link rel="stylesheet" type="text/css" href="style.css" />
</head>
<body>
  <div class="nav-bar"></div>
  <div id="app">
    <div class="product">

      <div class="product-image">
        <img :src="image">
      </div>

      <div class="product-info">
        {{ image }}
        <h1>{{ product }}</h1>
      </div>

    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/vue"></script>
  <script src="main.js"></script>
</body>
</html>
</syntaxhighlight>

* main.js
<syntaxhighlight lang="javascript">
var app = new Vue({
  el: '#app',
  data: {
    product: 'Socks',
    image: './assets/vmSocks-blue.jpg'
  },
});
</syntaxhighlight>


= 条件付きレンダリング(Conditional Rendering) =
商品が<code>In Stock</code> か<code>Out Of Stock</code> かで表示を変える方法について勉強していきたいと思います。<br />

まずは条件分岐を気にせずに<code>In Stock</code> か<code>Out Of Stock</code> の両方を表示するようにしてみましょう。

<syntaxhighlight lang="diff">
 <!DOCTYPE html>
 <html>
 <head>
 <title>Product App</title>
 <link rel="stylesheet" type="text/css" href="style.css" />
 </head>
 <body>
   <div class="nav-bar"></div>
   <div id="app">
     <div class="product">
 
       <div class="product-image">
         <img :src="image">
       </div>
 
       <div class="product-info">
         {{ image }}
         <h1>{{ product }}</h1>
+        <p>In Stock</p>
+        <p>Out of Stock</p>
       </div>
 
     </div>
   </div>
   <script src="https://cdn.jsdelivr.net/npm/vue"></script>
   <script src="main.js"></script>
 </body>
 </html>
 </syntaxhighlight>
 
 * main.js
 <syntaxhighlight lang="javascript">
 var app = new Vue({
   el: '#app',
   data: {
     product: 'Socks',
     image: './assets/vmSocks-blue.jpg'
   },
 });
</syntaxhighlight>

== 条件によって表示を変える ==
上記の状態でWeb 画面を表示すると<code>In Stock</code> と<code>Out of Stock</code> の両方が表示される用になっているはずです。
これを、商品の在庫がある場合は<code>In Stock</code> と表示し、在庫がない場合は<code>Out of Stock</code> と表示する表に条件分岐で表示する内容を変えるように処理を実装したいと思います。








